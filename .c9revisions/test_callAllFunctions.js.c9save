{"ts":1368036070160,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//apply same thing to all functions\n\n/*var data sample = {\n\n        timer_handle: null\n\n        ,propNames:{}\n        ,cantProps:propNames.length\n        ,actual_index: -1\n        ,actual_name:\"\"\n        \n        ,doit_fn:null\n        \n        ,tests\n        ,etc\n}\n*/\n\nfunction tic (data) {\n    if (data.actual_index>=data.cantProps) {\n        clearInterval(data.timer); //end tic thread\n    }\n    else {\n        data.actual_name=data.propNames[++data.actual_index];\n        console.log('------'+data.actual_name+'------');\n        data.doit(data);\n    }\n}\n\nfunction call_if_function(data){\n    if (typeof data.obj_to_test[data.actual_name] === 'function') {\n        //is function -> test it\n        data.obj_to_test[data.actual_name](data.genericparam\n                , function(callback_data){\n                        console.log(data.actual_name +', callback data: '+JSON.stringify(callback_data))});\n}\n\nfunction startTic(data, interval)\n{\n    data.timer_handle = setInterval(tic,100, data);\n}\n\n\nexports.callAllFunctions\n= function (obj, genericparam)\n    {\n    var data;\n    data.obj_to_test = obj;\n    data.genericparam = genericparam;\n    data.propNames = Object.getOwnPropertyNames(obj);\n    data.cantProps = data.propNames.length;\n    data.actual_index=-1;\n    data.doit = call_if_function;\n    //start tic thread\n    data.timer_handle = setInterval(tic,100, data);\n\n    startTic(data,100);\n    };\n\n\n// test.propname = function name\n//      [ inner array = [param1, param2, callback_fn] ]\n//\n\nfunction callTest(data){\n    var params=data.tests[data.actual_name]; //array\n    data.obj_to_test[data.actual_name](params[0],params[1],params[2]); //call fn con los params - params[3] es una callbackfn\n}\n\nexports.callAll_Tests\n= function (tests, obj)\n    {\n    var data;\n    data.obj_to_test = obj;\n    data.propNames = Object.keys(tests);\n    data.cantProps = data.propNames.length;\n\n    data.tests = tests;\n    data.doit = callTest;\n\n    //start tic thread\n    startTic(data,100);\n    };\n"]],"start1":0,"start2":0,"length1":0,"length2":1994}]],"length":1994}
{"contributors":[],"silentsave":false,"ts":1368036035450,"patch":[[{"diffs":[[0," startTic(data,100);\n    };\n"],[1,"\n\n\n\n"]],"start1":1966,"start2":1966,"length1":28,"length2":32}]],"length":1998,"saved":false}
