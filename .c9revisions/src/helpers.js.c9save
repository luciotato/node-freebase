{"ts":1368022226553,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//if nodejs, load these modules\nif (typeof module !== 'undefined' && module.exports) {\n  var _ = require('underscore');\n  var async = require('async');\n  var data = require('./data.js').data;\n  var http = require('./http.js');\n}\n\nvar async_max = 10; //the hardest we will ever concurrently hit freebase\n\n//non-front-facing methods that are used for the freebase javascript package\n\nvar fns = {}\n\nvar globals = {\n  host: 'https://www.googleapis.com/freebase/v1/',\n  image_host: \"https://usercontent.googleapis.com/freebase/v1/image\",\n  geosearch: 'http://api.freebase.com/api/service/geosearch',\n  wikipedia_host: 'http://en.wikipedia.org/w/api.php'\n}\n\n\n//compact even empty objects\nfns.compact_strong = function(arr) {\n  return _.unique(_.compact(arr)).filter(function(v) {\n    return _.isEmpty(v) == false\n  })\n}\n\n\nfns.settle_params = function(params, method, defaults) {\n  var o = {\n    valid: false,\n    q: params[0],\n    options: params[1] || {},\n    callback: params[2] || console.log,\n    defaults: defaults || {},\n    method: method || ''\n  }\n  //flexible parameters\n  if (typeof o.options == \"function\") {\n    o.callback = o.options;\n    o.options = {};\n  }\n  //fancy callback wrapper\n  if (o.options.verbose) {\n    var tmp = o.callback\n    o.callback = function(r) {\n      console.log('hi')\n      return tmp(r)\n    }\n  }\n  //handle an array\n  if (_.isArray(o.q)) {\n    if (o.q.length > 1) {\n      o.q = fns.compact_strong(o.q);\n      o.valid = true;\n      o.array = true;\n      return o\n    } else {\n      o.q = o.q[0]; //just use the first element\n    }\n  }\n  //if its a freebase-type object\n  if (_.isObject(o.q)) {\n    o.q = o.q.id || o.q.mid || o.q.name;\n  }\n  //make sure we're sane\n  if (typeof o.q != \"string\" || typeof o.options != \"object\" || typeof o.callback != \"function\") {\n    return o;\n  }\n  //handle an id\n  if (o.q.match(/\\/.*?\\/.*?/)) {\n    o.is_id = true;\n  }\n  //set default options\n  for (var i in o.defaults) {\n    o.options[i] = o.options[i] || o.defaults[i];\n  }\n  //remove whitespace\n  o.q = o.q.replace(/  /, ' ');\n  o.q = o.q.replace(/^\\s+|\\s+$/, '');\n  //if it's a url, clean it up\n  if (o.q.match(/^(https?:\\/\\/|www\\.)/)) {\n    o.q = o.q.replace(/\\/$/, '');\n    o.q = o.q.replace(/^https/, 'http');\n    o.url = true;\n  }\n  o.valid = true;\n  return o\n}\n\n//sort by frequency\nfns.topk = function(myArray, length) {\n  var newArray = [];\n  length = length || 1\n  var freq = {};\n  //Count Frequency of Occurances\n  var i = myArray.length - 1;\n  for (var i; i > -1; i--) {\n    var value = myArray[i];\n    freq[value] == null ? freq[value] = 1 : freq[value]++;\n  }\n  //convert to sortable array\n  for (var value in freq) {\n    newArray.push(value);\n  }\n  return newArray.sort(function(a, b) {\n    return freq[b] - freq[a];\n  }).map(function(v) {\n    return {\n      value: v,\n      count: freq[v],\n      percentage: ((freq[v] / length) * 100).toFixed(2)\n    }\n  });\n}\n\nfns.percentage = function(a, b) {\n  return parseInt((a / b) * 100)\n}\n\n\n//kill the freebase internal-properties that don't feel graphy\nfns.kill_boring = function(obj) {\n  if (!obj) {\n    return {}\n  }\n  data.boring.forEach(function(v) {\n    delete obj[v]\n  })\n  return obj\n}\n\n//****************************\nfns.parse_topic_api = function(properties, options) {\n  var out = [];\n  properties = fns.kill_boring(properties)\n  Object.keys(properties).forEach(function(key) {\n    var v = properties[key];\n    //add topics\n    if (v.valuetype == \"object\") {\n      v.values = v.values.map(function(s) {\n        s.property = key;\n        return s\n      })\n      out = out.concat(v.values)\n    }\n    //add the topics from cvt values in the same manner\n    if (v.valuetype == \"compound\") {\n      v.values.forEach(function(c) {\n        c.property = fns.kill_boring(c.property);\n        Object.keys(c.property).forEach(function(key2) {\n          if (c.property[key2].valuetype == \"object\") {\n            c.property[key2].values = c.property[key2].values.map(function(s) {\n              s.property = [key, key2];\n              return s\n            })\n            out = out.concat(c.property[key2].values)\n          }\n        })\n      })\n    }\n  })\n  out = out.map(function(o) {\n    return {\n      name: o.text,\n      id: o.id,\n      property: o.property\n    }\n  })\n  out = out.map(function(o) {\n    if (_.isArray(o.property)) {\n      o.property = o.property.join('');\n    }\n    return o\n  })\n  return out;\n}\n\n///////**************\n//lookup metaschema predicate matches offline..\nfns.metaschema_lookup = function(property) {\n  property = property.toLowerCase();\n  property = property.replace(/\\W(is|was|are|will be|has been)\\W/, ' ');\n  property = property.replace(/  /g, ' ');\n  property = property.replace(/_/g, ' ');\n  property = property.replace(/^\\s+|\\s+$/, '');\n  var candidate_properties = data.metaschema.filter(function(v) {\n    v.aliases = v.aliases || []\n    return v.id == property || v.name.toLowerCase() == property || fns.isin(property, v.aliases) || v.search.replace(/_/g, ' ') == property\n  })[0]\n  candidate_properties = candidate_properties || {}\n  return candidate_properties.search;\n}\n//console.log(metaschema_lookup('built with'))\n\n/////*****************************\n// fns.list_category_like=function(q, options, callback){\n//   callback=callback||console.log;\n//   if(!q){return callback({})}\n//   options=options||{};\n//   q=fns.singularize(q);\n//   freebase.topic(q, options, function(r){\n//     if(!r || !r.property || !_.isObject(r.property) ){return callback([])}\n//     var all=Object.keys(r.property).filter(function(v){\n//       return fns.isin(v, data.category_like)\n//     }).map(function(p){\n//       //add the property\n//       r.property[p].values=r.property[p].values.map(function(v){\n//         v.property=p;\n//         return v;\n//       })\n//       return r.property[p].values\n//     })\n//     all=_.flatten(all);\n//     return callback(all)\n//   })\n// }\n//list_category_like(\"city\")\n\n//originally by david huynh 2010, http://www.freebase.com/appeditor/#!path=//cubed.dfhuynh.user.dev/index\n//Algorithm is adopted from\n//http://www.csse.monash.edu.au/~damian/papers/HTML/Plurals.html\nfns.singularize = function(text) {\n  if (text.match(' ')) { //multiple words\n    var words = text.split(' ');\n    var last = words[words.length - 1];\n    var firsts = words.slice(0, -1);\n    return firsts.join(\" \") + ' ' + fns.singularize(last);\n  }\n  var prepositions = {\n    \"about\": 1,\n    \"above\": 1,\n    \"across\": 1,\n    \"after\": 1,\n    \"against\": 1,\n    \"along\": 1,\n    \"among\": 1,\n    \"around\": 1,\n    \"at\": 1,\n    \"before\": 1,\n    \"behind\": 1,\n    \"below\": 1,\n    \"beneath\": 1,\n    \"beside\": 1,\n    \"between\": 1,\n    \"beyond\": 1,\n    \"but\": 1,\n    \"by\": 1,\n    \"despite\": 1,\n    \"down\": 1,\n    \"during\": 1,\n    \"except\": 1,\n    \"for\": 1,\n    \"from\": 1,\n    \"in\": 1,\n    \"inside\": 1,\n    \"into\": 1,\n    \"like\": 1,\n    \"near\": 1,\n    \"of\": 1,\n    \"off\": 1,\n    \"on\": 1,\n    \"onto\": 1,\n    \"out\": 1,\n    \"outside\": 1,\n    \"over\": 1,\n    \"past\": 1,\n    \"since\": 1,\n    \"through\": 1,\n    \"throughout\": 1,\n    \"till\": 1,\n    \"to\": 1,\n    \"toward\": 1,\n    \"under\": 1,\n    \"underneath\": 1,\n    \"until\": 1,\n    \"up\": 1,\n    \"upon\": 1,\n    \"with\": 1,\n    \"within\": 1,\n    \"without\": 1\n  };\n  var userDefinedNouns = [{\n    \"p\": \"people\",\n    \"s\": \"person\"\n  }, {\n    \"p\": \"tornadoes\",\n    \"s\": \"tornado\"\n  }, {\n    \"p\": \"churches\",\n    \"s\": \"church\"\n  }, {\n    \"p\": \"countries\",\n    \"s\": \"country\"\n  }, {\n    \"p\": \"cities\",\n    \"s\": \"city\"\n  }, {\n    \"p\": \"companies\",\n    \"s\": \"company\"\n  }, {\n    \"p\": \"monkies\",\n    \"s\": \"monkey\"\n  }, {\n    \"p\": \"donkies\",\n    \"s\": \"donkey\"\n  }, {\n    \"p\": \"mysteries\",\n    \"s\": \"mystery\"\n  }, {\n    \"p\": \"authors\",\n    \"s\": \"author\"\n  }];\n\n  // Table A.1\n  var irregularNouns = {\n    \"beef\": {\n      anglicized: \"beefs\",\n      classical: \"beeves\"\n    },\n    \"brother\": {\n      anglicized: \"brothers\",\n      classical: \"brethren\"\n    },\n    \"child\": {\n      anglicized: null,\n      classical: \"children\"\n    },\n    \"cow\": {\n      anglicized: null,\n      classical: \"kine\"\n    },\n    \"ephemeris\": {\n      anglicized: null,\n      classical: \"ephemerides\"\n    },\n    \"genie\": {\n      anglicized: null,\n      classical: \"genii\"\n    },\n    \"money\": {\n      anglicized: \"moneys\",\n      classical: \"monies\"\n    },\n    \"mongoose\": {\n      anglicized: \"mongooses\",\n      classical: null\n    },\n    \"mythos\": {\n      anglicized: null,\n      classical: \"mythoi\"\n    },\n    \"octopus\": {\n      anglicized: \"octopuses\",\n      classical: \"octopodes\"\n    },\n    \"ox\": {\n      anglicized: null,\n      classical: \"oxen\"\n    },\n    \"soliloquy\": {\n      anglicized: \"soliloquies\",\n      classical: null\n    },\n    \"trilby\": {\n      anglicized: \"trilbys\",\n      classical: null\n    }\n  };\n\n  var uninflectedSuffixes = [\"fish\", \"ois\", \"sheep\", \"deer\", \"pox\", \"itis\"];\n\n  // Table A.2\n  var uninflectedNouns = {\n    \"bison\": 1,\n    \"flounder\": 1,\n    \"pliers\": 1,\n    \"bream\": 1,\n    \"gallows\": 1,\n    \"proceedings\": 1,\n    \"breeches\": 1,\n    \"graffiti\": 1,\n    \"rabies\": 1,\n    \"britches\": 1,\n    \"headquarters\": 1,\n    \"salmon\": 1,\n    \"carp\": 1,\n    \"herpes\": 1,\n    \"scissors\": 1,\n    \"chassis\": 1,\n    \"high-jinks\": 1,\n    \"sea-bass\": 1,\n    \"seabass\": 1,\n    \"clippers\": 1,\n    \"homework\": 1,\n    \"series\": 1,\n    \"cod\": 1,\n    \"innings\": 1,\n    \"shears\": 1,\n    \"contretemps\": 1,\n    \"jackanapes\": 1,\n    \"species\": 1,\n    \"corps\": 1,\n    \"mackerel\": 1,\n    \"swine\": 1,\n    \"debris\": 1,\n    \"measles\": 1,\n    \"trout\": 1,\n    \"diabetes\": 1,\n    \"mews\": 1,\n    \"tuna\": 1,\n    \"djinn\": 1,\n    \"mumps\": 1,\n    \"whiting\": 1,\n    \"eland\": 1,\n    \"news\": 1,\n    \"wildebeest\": 1,\n    \"elk\": 1,\n    \"pincers\": 1,\n\n    \"moose\": 1,\n    \"shrimp\": 1,\n    \"hoi polloi\": 1,\n    \"riffraff\": 1,\n    \"rabble\": 1\n  };\n  var inflectionCategories = [{ // Table A.10\n    from: \"a\",\n    to: \"ae\",\n    words: [\"alumna\", \"alga\", \"vertebra\"]\n  }, {\n    // Table A.11\n    from: \"a\",\n    anglicized: \"as\",\n    classical: \"ae\",\n    words: [\"abscissa\", \"amoeba\", \"antenna\", \"aurora\", \"formula\", \"hydra\", \"hyperbola\", \"lacuna\", \"medusa\", \"nebula\", \"nova\", \"parabola\"]\n  }, {\n    // Table A.12\n    from: \"a\",\n    anglicized: \"as\",\n    classical: \"ata\",\n    words: [\"anathema\", \"bema\", \"carcinoma\", \"charisma\", \"diploma\", \"dogma\", \"drama\", \"edema\", \"enema\", \"enigma\", \"gumma\", \"lemma\", \"lymphoma\", \"magma\", \"melisma\", \"miasma\", \"oedema\", \"sarcoma\", \"schema\", \"soma\", \"stigma\", \"stoma\", \"trauma\"]\n  }, {\n    // Table A.13\n    from: \"en\",\n    anglicized: \"ens\",\n    classical: \"ina\",\n    words: [\"stamen\", \"foramen\", \"lumen\"]\n  }, {\n    // Table A.14\n    from: \"ex\",\n    to: \"ices\",\n    words: [\"codex\", \"murex\", \"silex\"]\n  }, {\n    // Table A.15\n    from: \"ex\",\n    anglicized: \"exes\",\n    classical: \"ices\",\n    words: [\"apex\", \"cortex\", \"index\", \"latex\", \"pontifex\", \"simplex\", \"vertex\", \"vortex\"]\n  }, {\n    // Table A.16\n    from: \"is\",\n    anglicized: \"ises\",\n    classical: \"ides\",\n    words: [\"iris\", \"clitoris\"]\n  }, {\n    // Table A.17\n    from: \"o\",\n    to: \"os\",\n    words: [\"albino\", \"archipelago\", \"armadillo\", \"commando\", \"ditto\", \"dynamo\", \"embryo\", \"fiasco\", \"generalissimo\", \"ghetto\", \"guano\", \"inferno\", \"jumbo\", \"lingo\", \"lumbago\", \"magneto\", \"manifesto\", \"medico\", \"octavo\", \"photo\", \"pro\", \"quarto\", \"rhino\", \"stylo\"]\n  }, {\n    // Table A.18\n    from: \"o\",\n    anglicized: \"os\",\n    classical: \"i\",\n    words: [\"alto\", \"basso\", \"canto\", \"contralto\", \"crescendo\", \"solo\", \"soprano\", \"tempo\"]\n  }, {\n    // Table A.19\n    from: \"on\",\n    to: \"a\",\n    words: [\"aphelion\", \"asyndeton\", \"criterion\", \"hyperbaton\", \"noumenon\", \"organon\", \"perihelion\", \"phenomenon\", \"prolegomenon\"]\n  }, {\n    // Table A.20\n    from: \"um\",\n    to: \"a\",\n    words: [\"agendum\", \"bacterium\", \"candelabrum\", \"datum\", \"desideratum\", \"erratum\", \"extremum\", \"stratum\", \"ovum\"]\n  }, {\n    // Table A.21\n    from: \"um\",\n    anglicized: \"ums\",\n    classical: \"a\",\n    words: [\"aquarium\", \"compendium\", \"consortium\", \"cranium\", \"curriculum\", \"dictum\", \"emporium\", \"enconium\", \"gymnasium\", \"honorarium\", \"interregnum\", \"lustrum\", \"maximum\", \"medium\", \"memorandum\", \"millenium\", \"minimum\", \"momentum\", \"optimum\", \"phylum\", \"quantum\", \"rostrum\", \"spectrum\", \"speculum\", \"stadium\", \"trapezium\", \"ultimatum\", \"vacuum\", \"velum\"]\n  }, {\n    // Table A.22\n    from: \"us\",\n    anglicized: \"uses\",\n    classical: \"i\",\n    words: [\"focus\", \"fungus\", \"genius\", \"incubus\", \"nimbus\", \"nucleolus\", \"radius\", \"stylus\", \"succubus\", \"torus\", \"umbilicus\", \"uterus\"]\n  }, {\n    // Table A.23\n    from: \"us\",\n    anglicized: \"uses\",\n    classical: \"us\",\n    words: [\"apparatus\", \"cantus\", \"coitus\", \"hiatus\", \"impetus\", \"nexus\", \"plexus\", \"prospectus\", \"sinus\", \"status\"]\n  }, {\n    // Table A.24\n    from: \"\",\n    to: \"i\",\n    words: [\"afreet\", \"afrit\", \"efreet\"]\n  }, {\n    // Table A.25\n    from: \"\",\n    to: \"im\",\n    words: [\"cherub\", \"goy\", \"geraph\"]\n  }];\n\n  function suffix(text, s) {\n    return text.length >= s.length && text.substring(text.length - s.length) == s;\n  }\n\n  function capIfCap(s, s2) {\n    if (typeof s == \"string\") {\n      var isCap = s2.charAt(0).toLowerCase() != s2.charAt(0);\n      return isCap ? (s.charAt(0).toUpperCase() + s.substr(1)) : s;\n    } else {\n      var a = [];\n      for (var i in s) {\n        var s3 = s[i];\n        a.push(capIfCap(s3, s2));\n      }\n      return a;\n    }\n  }\n\n  function inflection(text, from, to) {\n    return text.substring(0, text.length - from.length) + to;\n  }\n\n  function isOneOf(c, chars) {\n    return chars.indexOf(c) >= 0;\n  }\n\n  function isVowel(c) {\n    return isOneOf(c, \"aeiou\");\n  }\n  var text2 = text.toLowerCase();\n  for (var o in userDefinedNouns) {\n    if (userDefinedNouns[o].p == text) {\n      return userDefinedNouns[o].s;\n    }\n  }\n  for (var singular in irregularNouns) {\n    var entry = irregularNouns[singular];\n    if (entry.anglicized === text2 || entry.classical === text2) {\n      return capIfCap(singular, text);\n    }\n  }\n  for (var s in uninflectedSuffixes) {\n    if (suffix(text2, s)) {\n      return text;\n    }\n  }\n  if (uninflectedNouns && uninflectedNouns[text2]) {\n    return text;\n  }\n  var checkWords = function(from, to, words) {\n    if (suffix(text, to)) {\n      var prefix = text.substring(text.length - to.length);\n      var text3 = prefix + entry.from;\n      for (var word in words) {\n        if (text3 === word) {\n          return capIfCap(text3, text);\n        }\n      }\n    }\n    return null;\n  }\n  for (var e in inflectionCategories) {\n    var entry = inflectionCategories[e];\n    var text3 = (\"to\" in entry && checkWords(entry.from, entry.to, entry.words)) || (\"anglicized\" in entry && checkWords(entry.from, entry.anglicized, entry.words)) || (\"classical\" in entry && checkWords(entry.from, entry.classical, entry.words));\n\n    if (text3 != null && typeof text3 == \"string\") {\n      return text3;\n    }\n  }\n  for (var prep in prepositions) {\n    var n = text.indexOf(\" \" + prep + \" \");\n    if (n > 0) {\n      var prefix = text.substring(0, n);\n      var r = singularize(prefix);\n      if (r != null) {\n        return r + \" \" + prep + \" \" + text.substr(n + prep.length + 2);\n      } else {\n        return null;\n      }\n    }\n    n = text.indexOf(\"-\" + prep + \"-\");\n    if (n > 0) {\n      var prefix = text.substring(0, n);\n      var r = singularize(prefix);\n      if (r != null) {\n        return r + \"-\" + prep + \"-\" + text.substr(n + prep.length + 2);\n      } else {\n        return null;\n      }\n    }\n  }\n  var j = text.lastIndexOf(\" \");\n  if (j > 0) {\n    var r = singularize(text.substring(j + 1));\n    if (r != null) {\n      return text.substring(0, j + 1) + r;\n    } else {\n      return null;\n    }\n  }\n  if (suffix(text, \"xes\") || suffix(text, \"ses\")) {\n    return text.substring(0, text.length - 2);\n  }\n  if (suffix(text, \"s\") && !suffix(text, \"ss\")) {\n    return text.substring(0, text.length - 1);\n  }\n  return text;\n}\n//console.log(fns.singularize(\"george soros\"));\n//console.log(fns.singularize(\"mama cass\"));\n\n\n//by spencer kelly (@spencermountain)\nfns.sentenceparser = function(text) {\n  var tmp = text.split(/(\\S.+?[.])(?=\\s+|$)/g);\n  var sentences = [];\n  //join acronyms, titles\n  for (var i in tmp) {\n    if (tmp[i]) {\n      tmp[i] = tmp[i].replace(/^\\s+|\\s+$/g, ''); //trim extra whitespace\n      //join common abbreviations + acronyms\n      if (tmp[i].match(/(^| )(mr|dr|llb|md|bl|phd|ma|ba|mrs|miss|misses|mister|sir|esq|mstr|jr|sr|st|lit|inc|fl|ex|eg|jan|feb|mar|apr|jun|aug|sept?|oct|nov|dec)\\. ?$/i) || tmp[i].match(/[ |\\.][a-z]\\.?$/i)) {\n        tmp[parseInt(i, 10) + 1] = tmp[i] + ' ' + tmp[parseInt(i, 10) + 1];\n      } else {\n        sentences.push(tmp[i]);\n        tmp[i] = '';\n      }\n    }\n  }\n  //cleanup afterwards\n  var clean = [];\n  for (var i2 in sentences) {\n    sentences[i2] = sentences[i2].replace(/^\\s+|\\s+$/g, ''); //trim extra whitespace\n    if (sentences[i2]) {\n      clean.push(sentences[i2]);\n    }\n  }\n  return clean;\n}\n//console.log(fns.sentenceparser('Dr. calm is me. lkj'))\n\n//remove objects with a duplicate field from json\nfns.json_unique = function(x, field) {\n  var newArray = [];\n  label: for (var i = 0; i < x.length; i++) {\n    for (var j = 0; j < newArray.length; j++) {\n      if (newArray[j] && x[i] && newArray[j][field] == x[i][field]) continue label;\n    }\n    newArray[newArray.length] = x[i];\n  }\n  return newArray;\n}\n\n\n\n//handle rate-limited asynchronous freebase calls with a ending callback\nfns.doit_async = function(params) {\n  params.q = params.q || [];\n  //pack the options in the array\n  var packs = params.q.map(function(q, i) {\n    return {\n      q: q,\n      options: params.options,\n      method: params.method\n    }\n  });\n  var unpack = function(pack, callback) {\n    pack.method(pack.q, pack.options, function(result) {\n      callback(null, result)\n    })\n  }\n  async.mapLimit(packs, async_max, unpack, function(err, result) {\n    return params.callback(result);\n  })\n}\n\n\n\n//turn freebase's silly $00 encoding into unicode\nfns.mql_unencode = function(x) {\n  x = x.replace(/\\$([0-9A-Fa-f]{4})/g, function(a, b) {\n    return String.fromCharCode(parseInt(b, 16));\n  });\n  return x;\n}\n//console.log(fns.mql_unencode(\"K$00F6ppen_climate_classification\"))\n\n\n//turn an array into smaller groups of arrays\nfns.groups_of = function(arr, group_length) {\n  var all = []\n  for (var i in arr) {\n    if (i % group_length === 0) {\n      all.push([arr[i]])\n    } else {\n      all[all.length - 1].push(arr[i])\n    }\n  }\n  return all\n}\n\nfns.parseurl = function(str) {\n  var o = {\n    strictMode: false,\n    key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n    q: {\n      name: \"queryKey\",\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  },\n  m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n    uri = {},\n    i = 14;\n  while (i--) uri[o.key[i]] = m[i] || \"\";\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n  return uri;\n}\n\n//turn options object into get paramaters\nfns.set_params = function(o) {\n  var options = o;\n  if (!options) {\n    return ''\n  }\n  return Object.keys(options).map(function(v) {\n    var val = options[v];\n    if (_.isArray(options[v]) || _.isObject(options[v])) {\n      val = encodeURIComponent(JSON.stringify(options[v]));\n    }\n    return v + '=' + val\n  }).join('&')\n}\n\nfns.clone = function(q) {\n  return JSON.parse(JSON.stringify(q))\n}\n\nfns.http = function(url, options, callback) {\n  if (options.key) {\n    url += '&key=' + options.key;\n  }\n  http.get(url, callback);\n}\n\nfns.post = function(query, options, callback) {\n  var body = 'query=' + JSON.stringify({\n    query: query,\n    key: options.key,\n    cursor: options.cursor\n  })\n  http.post('http://api.freebase.com/api/service/mqlread', body, callback);\n}\n//fns.post([{\"id\":\"/en/radiohead\",\"name\":null}],{},console.log)\n\nfns.isin = function(word, arr) {\n  return arr.some(function(v) {\n    return v == word\n  })\n}\n\n\n  // export for AMD / RequireJS\n  if (typeof define !== 'undefined' && define.amd) {\n    define([], function() {\n      return fns;\n    });\n  }\n  // export for Node.js\n  else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = fns;\n  }\n\n  "]],"start1":0,"start2":0,"length1":0,"length2":20555}]],"length":20555}
{"contributors":[],"silentsave":false,"ts":1368022502167,"patch":[[{"diffs":[[0,"callback"],[1,";"],[0,"\n    o.c"]],"start1":1236,"start2":1236,"length1":16,"length2":17},{"diffs":[[0,"og('hi')"],[1,";"],[0,"\n      r"]],"start1":1292,"start2":1292,"length1":16,"length2":17},{"diffs":[[0,"n tmp(r)"],[1,";"],[0,"\n    }"],[1,";"],[0,"\n  }\n  /"]],"start1":1313,"start2":1313,"length1":22,"length2":24},{"diffs":[[0,"return o"],[1,";"],[0,"\n    } e"]],"start1":1491,"start2":1491,"length1":16,"length2":17},{"diffs":[[0,"return o"],[1,";"],[0,"\n}"],[1,";"],[0,"\n\n//sort"]],"start1":2284,"start2":2284,"length1":18,"length2":20}]],"length":20562,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368024092722,"patch":[[{"diffs":[[0,") {\n"],[-1,"  var _ = require('underscore');\n"],[0,"  va"]],"start1":83,"start2":83,"length1":41,"length2":8},{"diffs":[[0,"objects\n"],[1,"/*"],[0,"fns.comp"]],"start1":641,"start2":641,"length1":16,"length2":18},{"diffs":[[0,"\n  })\n}\n"],[1,"*/\n"],[0,"\n\nfns.se"]],"start1":775,"start2":775,"length1":16,"length2":19}]],"length":20534,"saved":false}
{"ts":1368024124944,"patch":[[{"diffs":[[0,"equire('"],[1,"./client_side/"],[0,"async"],[1,".js"],[0,"');\n  va"]],"start1":102,"start2":102,"length1":21,"length2":38}]],"length":20551,"saved":false}
{"ts":1368024176552,"patch":[[{"diffs":[[0,".exports) {\n"],[1,"    console.log(__dirname);\n  "],[0,"  var async "]],"start1":75,"start2":75,"length1":24,"length2":54},{"diffs":[[0,"async.js');\n"],[1,"  "],[0,"  var data ="]],"start1":154,"start2":154,"length1":24,"length2":26},{"diffs":[[0,").data;\n"],[1,"  "],[0,"  var ht"]],"start1":200,"start2":200,"length1":16,"length2":18}]],"length":20585,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368024253414,"patch":[[{"diffs":[[0,"rname);\n    "],[1,"//"],[0,"var async = "]],"start1":107,"start2":107,"length1":24,"length2":26},{"diffs":[[0,"equire('"],[-1,"./"],[0,"data.js'"]],"start1":184,"start2":184,"length1":18,"length2":16},{"diffs":[[0,"equire('"],[-1,"./"],[0,"http.js'"]],"start1":224,"start2":224,"length1":18,"length2":16}]],"length":20583,"saved":false}
{"ts":1368024338278,"patch":[[{"diffs":[[0,"equire('"],[1,"./"],[0,"data.js'"]],"start1":184,"start2":184,"length1":16,"length2":18},{"diffs":[[0,"equire('"],[1,"./"],[0,"http.js'"]],"start1":226,"start2":226,"length1":16,"length2":18}]],"length":20587,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368027842926,"patch":[[{"diffs":[[0,"    "],[-1,"//"],[0,"var "],[-1,"async"],[1,"_"],[0," = r"]],"start1":115,"start2":115,"length1":19,"length2":13},{"diffs":[[0,"re('"],[-1,"./client_side/async.js"],[1,"underscore"],[0,"');\n"]],"start1":132,"start2":132,"length1":30,"length2":18}]],"length":20569,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368038162078,"patch":[[{"diffs":[[0,"objects\n"],[-1,"/*"],[0,"fns.comp"]],"start1":676,"start2":676,"length1":18,"length2":16},{"diffs":[[0,") =="],[1,"="],[0," false"],[1,";"],[0,"\n  })\n}\n"],[-1,"*/\n"],[0,"\n\nfn"]],"start1":798,"start2":798,"length1":25,"length2":24}]],"length":20566,"saved":false}
{"ts":1368038220160,"patch":[[{"diffs":[[0,"derscore');\n"],[1,"    var asyn = require('../client_side/async');\n"],[0,"    var data"]],"start1":138,"start2":138,"length1":24,"length2":72}]],"length":20614,"saved":false}
{"ts":1368038237615,"patch":[[{"diffs":[[0,"var asyn"],[1,"c"],[0," = requi"]],"start1":154,"start2":154,"length1":16,"length2":17}]],"length":20615,"saved":false}
