{"ts":1368024399897,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//client-side and serverside http methods, using jquery and micheal/request respectively\n\n  var http = {}\n\n  //client-side environment\n  if (typeof window != 'undefined' && window.screen) {\n\n    http.get = function(url, callback) {\n      callback = callback || defaultcallback;\n      $.get(url, function(result) {\n        callback(trytoparse(result))\n      }).fail(function(e) {\n        callback(e.statusText || \"error\")\n      });\n    }\n\n    http.jsonp = function(url, callback) {\n      callback = callback || defaultcallback;\n      $.getJSON(url, function(result) {\n        callback(trytoparse(result))\n      }).fail(function(e) {\n        callback(e.statusText || \"error\")\n      });\n    }\n\n    http.post = function(url, data, callback) {\n      callback = callback || defaultcallback;\n      $.post(url, data, function(result) {\n        callback(trytoparse(result))\n      }).fail(function(e) {\n        callback(e.statusText || \"error\")\n      });\n    }\n\n    function defaultcallback(s) {\n      console.log(s);\n      $('body').append(JSON.stringify(s));\n    }\n  }\n  //server-side environment\n  else if (typeof module !== 'undefined' && module.exports) {\n    var request = require('request');\n\n    http.get = function(url, callback) {\n      callback = callback || console.log;\n      request({\n        uri: url\n      }, function(error, response, body) {\n        callback(trytoparse(body))\n      })\n    }\n\n    http.post = function(url, data, callback) {\n      callback = callback || console.log;\n      if (typeof data == 'object') {\n        data = JSON.stringify(data);\n      }\n      request({\n        url: 'http://api.freebase.com/api/service/mqlread',\n        method: 'POST',\n        body: data\n      }, function(err, res, body) {\n        callback(trytoparse(body));\n      });\n    }\n\n  }\n\n  function trytoparse(d) {\n    try {\n      return JSON.parse(d);\n    } catch (e) {\n      return d;\n    }\n  }\n\n  // export for AMD / RequireJS\n  if (typeof define !== 'undefined' && define.amd) {\n    define([], function() {\n      return http;\n    });\n  }\n  // export for Node.js\n  else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = http;\n  }\n\n"]],"start1":0,"start2":0,"length1":0,"length2":2157}]],"length":2157}
