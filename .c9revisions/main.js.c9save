{"ts":1368005026671,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var freebase=require('./freebase');\nvar async=require('async');\nvar slow=require('slow');\nvar fns=require('./lib/helpers')\nvar _=require('underscore');\nvar test={}\n//failing\n\n// freebase.inside('toronto',{}, function(r){\n// \tconsole.log(r.length>3)\n// })\n // freebase.transitive(\"barrie\", \"part_of\", {}, function(r){\n // \tconsole.log(r.length>3)\n // })\n\n\ntest.lookup=[\n  [\"http://toronto.ca\", {}, function(r){console.log(r.id==\"/en/toronto\")}],\n  [[\"/m/09jm8\", \"http://myspace.com/u2\"], {}, function(r){console.log(r[1].name==\"U2\")\t}],\n  [\"australia\",{type:\"/film/film\"}, function(r){console.log(r.mid==\"/m/026qnh6\")}],\n  [\"thom yorke\", {}, function(r){console.log(r.mid==\"/m/01p0w_\")}],\n  [\"tom green\", {}, function(r){console.log(r.mid==\"/m/017yxq\")}],\n  [[\"toronto\",\"suddenly susan\"],{},function(r){console.log(r.length==2)}]\n]\n\ntest.mqlread=[\n  [{ \"type\": \"/music/album\", \"id\": \"/en/keep_it_turned_on\", \"artist\" : null},{}, function(r){console.log(r.result.artist=='Rick Astley')}]\n]\ntest.get_id=[\n  [\"/en/tony_hawk\",{},function(r){console.log(r.id==\"/en/tony_hawk\")}]\n]\ntest.topic=[\n ['radiohead',{},function(r){console.log(r.id=='/m/09jm8' && r.property['/music/artist/origin']!=null) } ]\n]\ntest.search=[\n  [\"franklin\",{},function(r){console.log(r.length>2)}]\n]\n test.paginate=[\n   [[{\"type\":\"/astronomy/moon\",\"name\":null}], {max:20}, function(r){console.log(r.length>20)} ],\n ]\ntest.grammar=[\n  [\"toronto maple leafs\",{},function(r){\n       console.log(_.isEqual(r, { plural: true,\n                 gender: null,\n                 article: 'a',\n                 pronoun: 'they',\n                 copula: 'are' }))\n      }],\n  [\"ron weasley\",{},function(r){\n     console.log(_.isEqual(r, { plural: false,\n                     gender: 'male',\n                     article: 'a',\n                     pronoun: 'he',\n                     copula: 'is' }))\n    }]\n]\ntest.same_as_links=[\n\t[\"http://www.geonames.org/6167865/\", {}, function(r){console.log(r.links.length>3)}],\n\t[\"toronto\", {}, function(r){console.log(r.links.length>3)}],\n\t[\"/m/0h7h6\", {}, function(r){console.log(r.links.length>3)}]\n]\ntest.translate=[\n\t[\"toronto\",{lang:\"zh\"},function(r){console.log(r.match(/多伦多/i)!=null)}],\n\t[\"radiohead\",{lang:\"/lang/ko\"},function(r){console.log(r.match(/라디오헤드/i)!=null)}]\n]\ntest.image=[\n  [\"australia\",{type:\"/location/location\"}, function(r){console.log(r);console.log(r.match(/maxheight/)!=null)}]\n]\ntest.description=[\n [\"mike myers\", {}, function(r){console.log(r.match(/myers/i)!=null)}],\n [\"http://myspace.com/u2\", {}, function(r){console.log(r.match(/u2/i)!=null)}]\n]\ntest.notable=[\n  [\"canada\",{},function(r){console.log(r.id=='/location/country')}]\n]\ntest.sentence=[\n  [\"thom yorke\", {}, function(r){console.log(r.match(/radiohead/i)!=null)}],\n  [\"meatloaf\", {type:\"/food/food\"}, function(r){console.log(r!=null)}],\n  [[{name:\"toronto\"},{id:\"/en/radiohead\",name:\"radiohead\"}],{},function(r){console.log(r.length==2)}]\n]\ntest.list=[\n  [\"earthquakes\", {}, function(r){console.log(r.length>20)}]\n]\ntest.place_data=[\n  [{lat:43.64806,lng:-79.40417}, {}, function(r){\n   console.log(r.city.name==\"Toronto\")\n  }],\n   [{lat:52.05375719395869,lng:5.9511566162109375}, {}, function(r){\n   console.log(r.country.name==\"Netherlands\")\n  }],\n  [{lat:47.9991410647952,lng:14.172706604003906}, {}, function(r){\n   console.log(r.country.name==\"Austria\")\n  }]\n]\ntest.incoming=[\n  [\"germany\",{},function(r){console.log(r.length>20)}]\n]\ntest.outgoing=[\n  [\"ubuntu\",{},function(r){console.log(r.length>15)} ]\n]\ntest.graph=function(){\n\t[\"paul ryan\", {}, function(r){console.log(r[0].object.name==\"Paul Ryan\"|| r[0].subject.name==\"Paul Ryan\")}]\n}\ntest.related=[\n  [\"radiohead\",{},function(r){console.log(r.length>4 && r[2].id!=null)}]\n]\ntest.gallery=[\n  [\"hurricanes\",{},function(r){console.log(r.length>20)}]\n]\ntest.wordnet=[\n   [[\"bat\",\"wood\"],{}, function(r){console.log(r.length==2)}],\n   [\"wood\",{}, function(r){console.log(r.length==4) }]\n]\ntest.geolocation=[\n [\"toronto\", {}, function(r){  console.log(r.latitude!=null)  }]\n]\ntest.nearby=[\n  [\"cn tower\", {type:\"/food/restaurant\"}, function(r){console.log(r.length>4)}]\n]\ntest.inside=[\n  [\"toronto\", {type:\"/locaton/citytown\"}, function(r){console.log(r.length>4)}]\n]\ntest.wikipedia_page=[\n  [\"tony hawk\", {}, function(r){console.log(r==\"Tony_Hawk\")}]\n]\ntest.wikipedia_categories=[\n  [\"meatloaf\",{type:\"/food/food\"},function(r){console.log(r.length>4 && r[3].match(/^Category/)!=null)}]\n]\ntest.wikipedia_links=[\n  [\"Toronto\", {}, function(r){console.log(r.length>=5)}]\n]\ntest.wikipedia_external_links=[\n  [\"/en/toronto\", {}, function(r){console.log(r.length>=3)}]\n]\n// test.schema_introspection=[\n//  [\"person\",{},function(r){console.log(r.id==\"/people/person\" && r.incoming_properties.length>5)}]\n//  [\"/people/person\",{},function(r){console.log(r.id==\"/people/person\" && r.incoming_properties.length>5)}]\n// ]\ntest.property_introspection=[\n]\ntest.property_lookup=[\n]\ntest.transitive=[\n]\ntest.is_a=[\n]\ntest.question=[\n]\ntest.dig=[\n]\ntest.mql_encode=[\n]\ntest.add_widget=[\n]\n\n\n//testit('sentence')\n\n\nfunction done(r){\n  console.log('===========done========')\n}\n\n\n  function testone(v){\n    var all=[]\n    console.log('========'+v+'=========')\n    test[v].map(function(t){\n      freebase[v](t[0],t[1],function(r){\n        t[2](r)\n      })\n    })\n  }\n\n//apply same thing to all functions\nfunction broadly(x, obj){\n  slow.walk(Object.keys(test), doit, done)\n  function doit(t){\n    console.log('------'+t+'------')\n    obj[t](x, function(r){\n      console.log(r)\n    })\n  }\n}\n\nfunction coverage(fn, tests){\n  fn=Object.keys(fn)\n  tests=Object.keys(test)\n  return {missing:_.difference(fn,tests),\n    has:_.union(fn,tests).length,\n    doesnt:_.difference(fn,tests).length,\n    dangling_tests:_.difference(tests,fn)\n  }\n}\nconsole.log(coverage(freebase, test))\nbroadly(null,freebase)\n\n//slow.walk(Object.keys(test), testone, done)\n"]],"start1":0,"start2":0,"length1":0,"length2":5868}]],"length":5868}
{"contributors":[],"silentsave":false,"ts":1368005019892,"patch":[[{"diffs":[[0,"equire('"],[-1,"."],[1,"src"],[0,"/freebas"]],"start1":14,"start2":14,"length1":17,"length2":19},{"diffs":[[0,"equire('"],[1,"client_side/"],[0,"async');"]],"start1":49,"start2":49,"length1":16,"length2":28},{"diffs":[[0,"re('"],[-1,"./lib"],[1,"scr"],[0,"/hel"]],"start1":117,"start2":117,"length1":13,"length2":11},{"diffs":[[0,"s')\n"],[-1,"var _=require('underscore');\n"],[0,"var "]],"start1":131,"start2":131,"length1":37,"length2":8}]],"length":5851,"saved":false}
{"ts":1368005070397,"patch":[[{"diffs":[[0,"freebase"],[1,".js"],[0,"');\nvar "]],"start1":26,"start2":26,"length1":16,"length2":19},{"diffs":[[0,"de/async"],[1,".js"],[0,"');\nvar "]],"start1":69,"start2":69,"length1":16,"length2":19}]],"length":5857,"saved":false}
{"ts":1368005122204,"patch":[[{"diffs":[[0,"equire('"],[1,"./"],[0,"src/free"]],"start1":14,"start2":14,"length1":16,"length2":18},{"diffs":[[0,"equire('"],[1,"./"],[0,"client_s"]],"start1":54,"start2":54,"length1":16,"length2":18},{"diffs":[[0,"async.js');\n"],[1,"//"],[0,"var slow=req"]],"start1":76,"start2":76,"length1":24,"length2":26},{"diffs":[[0,"equire('"],[1,"./"],[0,"scr/help"]],"start1":125,"start2":125,"length1":16,"length2":18}]],"length":5865,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368005714324,"patch":[[{"diffs":[[0,"var f"],[-1,"reebase"],[1,"b"],[0,"=require"]],"start1":0,"start2":0,"length1":20,"length2":14},{"diffs":[[0,"('./"],[-1,"./freebase.js');\nvar async=require('./async.js');\n//var slow=require('slow');\nvar fns=require('././lib/helpers')\nvar _=require('underscore');\nvar test={}\n//failing\n\n// freebase.inside('toronto',{}, function(r){\n// \tconsole.log(r.length>3)\n// })\n // freebase.transitive(\"barrie\", \"part_of\", {}, function(r){\n // \tconsole.log(r.length>3)\n // })\n\n\ntest.lookup=[\n  [\"http://toronto.ca\", {}, function(r){console.log(r.id==\"/en/toronto\")}],\n  [[\"/m/09jm8\", \"http://myspace.com/u2\"], {}, function(r){console.log(r[1].name==\"U2\")\t}],\n  [\"australia\",{type:\"/film/film\"}, function(r){console.log(r.mid==\"/m/026qnh6\")}],\n  [\"thom yorke\", {}, function(r){console.log(r.mid==\"/m/01p0w_\")}],\n  [\"tom green\", {}, function(r){console.log(r.mid==\"/m/017yxq\")}],\n  [[\"toronto\",\"suddenly susan\"],{},function(r){console.log(r.length==2)}]\n]\n\ntest.mqlread=[\n  [{ \"type\": \"/music/album\", \"id\": \"/en/keep_it_turned_on\", \"artist\" : null},{}, function(r){console.log(r.result.artist=='Rick Astley')}]\n]\ntest.get_id=[\n  [\"/en/tony_hawk\",{},function(r){console.log(r.id==\"/en/tony_hawk\")}]\n]\ntest.topic=[\n ['radiohead',{},function(r){console.log(r.id=='/m/09jm8' && r.property['/music/artist/origin']!=null) } ]\n]\ntest.search=[\n  [\"franklin\",{},function(r){console.log(r.length>2)}]\n]\n test.paginate=[\n   [[{\"type\":\"/astronomy/moon\",\"name\":null}], {max:20}, function(r){console.log(r.length>20)} ],\n ]\ntest.grammar=[\n  [\"toronto maple leafs\",{},function(r){\n       console.log(_.isEqual(r, { plural: true,\n                 gender: null,\n                 article: 'a',\n                 pronoun: 'they',\n                 copula: 'are' }))\n      }],\n  [\"ron weasley\",{},function(r){\n     console.log(_.isEqual(r, { plural: false,\n                     gender: 'male',\n                     article: 'a',\n                     pronoun: 'he',\n                     copula: 'is' }))\n    }]\n]\ntest.same_as_links=[\n\t[\"http://www.geonames.org/6167865/\", {}, function(r){console.log(r.links.length>3)}],\n\t[\"toronto\", {}, function(r){console.log(r.links.length>3)}],\n\t[\"/m/0h7h6\", {}, function(r){console.log(r.links.length>3)}]\n]\ntest.translate=[\n\t[\"toronto\",{lang:\"zh\"},function(r){console.log(r.match(/多伦多/i)!=null)}],\n\t[\"radiohead\",{lang:\"/lang/ko\"},function(r){console.log(r.match(/라디오헤드/i)!=null)}]\n]\ntest.image=[\n  [\"australia\",{type:\"/location/location\"}, function(r){console.log(r);console.log(r.match(/maxheight/)!=null)}]\n]\ntest.description=[\n [\"mike myers\", {}, function(r){console.log(r.match(/myers/i)!=null)}],\n [\"http://myspace.com/u2\", {}, function(r){console.log(r.match(/u2/i)!=null)}]\n]\ntest.notable=[\n  [\"canada\",{},function(r){console.log(r.id=='/location/country')}]\n]\ntest.sentence=[\n  [\"thom yorke\", {}, function(r){console.log(r.match(/radiohead/i)!=null)}],\n  [\"meatloaf\", {type:\"/food/food\"}, function(r){console.log(r!=null)}],\n  [[{name:\"toronto\"},{id:\"/en/radiohead\",name:\"radiohead\"}],{},function(r){console.log(r.length==2)}]\n]\ntest.list=[\n  [\"earthquakes\", {}, function(r){console.log(r.length>20)}]\n]\ntest.place_data=[\n  [{lat:43.64806,lng:-79.40417}, {}, function(r){\n   console.log(r.city.name==\"Toronto\")\n  }],\n   [{lat:52.05375719395869,lng:5.9511566162109375}, {}, function(r){\n   console.log(r.country.name==\"Netherlands\")\n  }],\n  [{lat:47.9991410647952,lng:14.172706604003906}, {}, function(r){\n   console.log(r.country.name==\"Austria\")\n  }]\n]\ntest.incoming=[\n  [\"germany\",{},function(r){console.log(r.length>20)}]\n]\ntest.outgoing=[\n  [\"ubuntu\",{},function(r){console.log(r.length>15)} ]\n]\ntest.graph=function(){\n\t[\"paul ryan\", {}, function(r){console.log(r[0].object.name==\"Paul Ryan\"|| r[0].subject.name==\"Paul Ryan\")}]\n}\ntest.related=[\n  [\"radiohead\",{},function(r){console.log(r.length>4 && r[2].id!=null)}]\n]\ntest.gallery=[\n  [\"hurricanes\",{},function(r){console.log(r.length>20)}]\n]\ntest.wordnet=[\n   [[\"bat\",\"wood\"],{}, function(r){console.log(r.length==2)}],\n   [\"wood\",{}, function(r){console.log(r.length==4) }]\n]\ntest.geolocation=[\n [\"toronto\", {}, function(r){  console.log(r.latitude!=null)  }]\n]\ntest.nearby=[\n  [\"cn tower\", {type:\"/food/restaurant\"}, function(r){console.log(r.length>4)}]\n]\ntest.inside=[\n  [\"toronto\", {type:\"/locaton/citytown\"}, function(r){console.log(r.length>4)}]\n]\ntest.wikipedia_page=[\n  [\"tony hawk\", {}, function(r){console.log(r==\"Tony_Hawk\")}]\n]\ntest.wikipedia_categories=[\n  [\"meatloaf\",{type:\"/food/food\"},function(r){console.log(r.length>4 && r[3].match(/^Category/)!=null)}]\n]\ntest.wikipedia_links=[\n  [\"Toronto\", {}, function(r){console.log(r.length>=5)}]\n]\ntest.wikipedia_external_links=[\n  [\"/en/toronto\", {}, function(r){console.log(r.length>=3)}]\n]\n// test.schema_introspection=[\n//  [\"person\",{},function(r){console.log(r.id==\"/people/person\" && r.incoming_properties.length>5)}]\n//  [\"/people/person\",{},function(r){console.log(r.id==\"/people/person\" && r.incoming_properties.length>5)}]\n// ]\ntest.property_introspection=[\n]\ntest.property_lookup=[\n]\ntest.transitive=[\n]\ntest.is_a=[\n]\ntest.question=[\n]\ntest.dig=[\n]\ntest.mql_encode=[\n]\ntest.add_widget=[\n]\n\n\n//testit('sentence')\n\n\nfunction done(r){\n  console.log('===========done========')\n}\n\n\n  function testone(v){\n    var all=[]\n    console.log('========'+v+'=========')\n    test[v].map(function(t){\n      freebase[v](t[0],t[1],function(r){\n        t[2](r)\n      })\n    })\n  }\n\n//apply same thing to all functions\nfunction broadly(x, obj){\n  slow.walk(Object.keys(test), doit, done)\n  function doit(t){\n    console.log('------'+t+'------')\n    obj[t](x, function(r){\n      console.log(r)\n    })\n  }\n}\n\nfunction coverage(fn, tests){\n  fn=Object.keys(fn)\n  tests=Object.keys(test)\n  return {missing:_.difference(fn,tests),\n    has:_.union(fn,tests).length,\n    doesnt:_.difference(fn,tests).length,\n    dangling_tests:_.difference(tests,fn)\n  }\n}\nconsole.log(coverage(freebase, test))\nbroadly(null,freebase)\n\n//slow.walk(Object.keys(test), testone, done)"],[1,"src/freebase.js');\nexports=fb.freebase;"],[0,"\n"]],"start1":14,"start2":14,"length1":5862,"length2":44}]],"length":58,"saved":false}
{"ts":1368005938023,"patch":[[{"diffs":[[-1,"var fb"],[1,"module.exports"],[0,"=req"]],"start1":0,"start2":0,"length1":10,"length2":18},{"diffs":[[0,"');\n"],[-1,"exports=fb.freebase;\n"]],"start1":41,"start2":41,"length1":25,"length2":4}]],"length":45,"saved":false}
